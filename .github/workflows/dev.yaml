name: Dev

on: [push]

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build images
    runs-on: [self-hosted, nix]
    env:
      IMAGE_REPOSITORY: public.ecr.aws/g1b1f7a7
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      - name: Login to Amazon ECR
        uses: ./.github/actions/login-to-public-ecr
        with:
          imageRepo: ${{ env.IMAGE_REPOSITORY }}

      - name: Build container images
        run: |-
          nix build -L -v '.#packages.${{ matrix.arch }}-linux.image' 

      - name: Push
        env:
          GITHUB_SHA: ${{ github.sha }}  
          NIX_ARCH: ${{ matrix.arch }}
        shell: nix develop -v -c bash {0}
        run: |-
          IMAGE_ARCH="amd64"
          if [[ "${NIX_ARCH}" == "aarch64" ]]; then
            IMAGE_ARCH="arm64"
          fi

          IMAGE_TAG="dev-${IMAGE_ARCH}-${GITHUB_SHA}"
        
          skopeo --insecure-policy copy \
            docker-archive:./result \
            docker://"${IMAGE_REPOSITORY}"/k8s-resource-replicator:"${IMAGE_TAG}"

  push:
    name: Push
    runs-on: [self-hosted, nix]
    needs: [build]
    env:
      IMAGE_REPOSITORY: public.ecr.aws/g1b1f7a7    
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      - name: Login to Amazon ECR
        uses: ./.github/actions/login-to-public-ecr
        with:
          imageRepo: ${{ env.IMAGE_REPOSITORY }}

      - name: Push multi-arch manifest
        shell: nix develop -v -c bash {0}
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |-
          manifest-tool push from-args \
            --platforms linux/amd64,linux/arm64 \
            --template "${IMAGE_REPOSITORY}"/k8s-resource-replicator:dev-ARCH-"${GITHUB_SHA}" \
            --target "${IMAGE_REPOSITORY}"/k8s-resource-replicator:dev-"${GITHUB_SHA}"

      - name: Push Helm chart
        shell: nix develop -v -c bash {0}
        env:
          HELM_CHART_VERSION: 1.0.0-${{ github.sha }}
          HELM_APP_VERSION: dev-${{ github.sha }}
        run: |-
          ./release.sh push_helm_chart \
            "${HELM_CHART_VERSION}" \
            "${HELM_APP_VERSION}" \
            "oci://${IMAGE_REPOSITORY}/charts"