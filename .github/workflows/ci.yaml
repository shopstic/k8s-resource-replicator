name: CI Workflow

on:
  push:
    branches: [main]
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  build-env:
    name: Build CI environment image
    runs-on: ubuntu-20.04
    outputs:
      image: ${{ steps.buildkit.outputs.image }}:${{ steps.buildkit.outputs.tag }}
    steps:
      - uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - run: chmod +r ~/.docker/config.json

      - name: Build and push shell Docker image
        id: buildkit
        uses: shopstic/buildkit-action@1.0.5
        with:
          context: ${{ github.workspace }}/images/shell
          image: ghcr.io/shopstic/k8s-resource-replicator-ci
          tag: ${{ hashFiles('images/shell/*') }}
          skipIfExists: true

  build-app:
    name: Build app image
    needs: build-env
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Cache deno
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.cache
          key: deno-${{ github.sha }}
          restore-keys: |
            deno-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - run: chmod +r ~/.docker/config.json

      - name: Compile
        env:
          SHELL_IMAGE: ${{ needs.build-env.outputs.image }}
          DENO_DIR: ${{ github.workspace }}/.cache/deno
        run: |-
          if ls "${DENO_DIR}" > /dev/null 2>&1; then
            du -sh "${DENO_DIR}"
          fi

          cat <<EOF | docker run \
            --workdir /repo \
            -i \
            --rm \
            -v "${GITHUB_WORKSPACE}:/repo" \
            -v "${DENO_DIR}:/root/.cache/deno" \
            -e "DENO_DIR=/root/.cache/deno" \
            "${SHELL_IMAGE}" \
            bash -l
          set -euo pipefail

          ./cli.sh code_quality
          ./cli.sh compile
          
          EOF

      - name: Build and push app Docker image
        uses: shopstic/buildkit-action@1.0.5
        if: github.ref == 'refs/heads/main'
        with:
          context: ${{ github.workspace }}/images/app
          image: shopstic/k8s-resource-replicator
          tag: ${{ github.sha }}
          skipIfExists: false

      - name: Build and push Helm Chart
        if: github.ref == 'refs/heads/main'
        env:
          SHELL_IMAGE: ${{ needs.build-env.outputs.image }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |-
          cat <<EOF | docker run \
            --workdir /repo \
            -i \
            --rm \
            -v "${GITHUB_WORKSPACE}:/repo" \
            "${SHELL_IMAGE}" \
            bash -l
          set -euo pipefail

          export HELM_EXPERIMENTAL_OCI=1
          echo "${GITHUB_TOKEN}" | helm registry login -u "${GITHUB_ACTOR}" --password-stdin ghcr.io
          helm chart save ./charts/resource-replicator "ghcr.io/shopstic/chart-resource-replicator:${GITHUB_SHA}"
          helm chart push "ghcr.io/shopstic/chart-resource-replicator:${GITHUB_SHA}"
          
          EOF